services:
  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: 2G
        reservations:
          cpus: "1.0"
          memory: 1G
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://pgsql:5432/sonarqube
      SONAR_JDBC_USERNAME: sonarqube
      SONAR_JDBC_PASSWORD: sonarqube
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - pgsql
    networks:
      - devops-net
      - hyundai-sales-net
  nexus:
    image: sonatype/nexus3:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1.5"
          memory: 2G
        reservations:
          cpus: "1.0"
          memory: 1G
    ports:
      - "8081:8081"  # Nexus Web UI
      - "8082:8082"  # Docker registry (if enabled)
    volumes:
      - nexus-data:/nexus-data
    networks:
      - devops-net
      - hyundai-sales-net
    environment:
      - INSTALL4J_ADD_VM_PARAMS=-Xms512m -Xmx2g -XX:MaxDirectMemorySize=2g  

  pgsql:
    image: postgres:15
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    environment:
      POSTGRES_USER: sonarqube
      POSTGRES_PASSWORD: sonarqube
      POSTGRES_DB: sonarqube
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devops-net
      - hyundai-sales-net
  loki:
    image: grafana/loki:main
    command: ['-config.file=/etc/loki/local-config.yaml']
    ports:
      - '3100:3100'
    networks:
      - devops-net
      - hyundai-sales-net
  prometheus:
    image: prom/prometheus:v2.46.0
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - '9090:9090'
    networks:
      - devops-net
      - hyundai-sales-net
  tempo:
    image: grafana/tempo:2.2.2
    command: ['-config.file=/etc/tempo.yaml']
    volumes:
      - ./tempo/tempo.yml:/etc/tempo.yaml:ro
      - tempo-data:/tmp/tempo
    ports:
      - '3110:3100' # Tempo
      - '9411:9411' # zipkin
    networks:
      - devops-net
      - hyundai-sales-net
  grafana:
    image: grafana/grafana:10.1.0
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - '3000:3000'
    networks:
      - devops-net
      - hyundai-sales-net
    depends_on:
      - loki
      - prometheus
      - tempo

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgres_data:
  nexus-data:
  tempo-data:

networks:
  devops-net:
    driver: bridge
